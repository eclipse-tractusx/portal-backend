###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

name: build & push Framework.Web nuget package

on:
  push:
    paths:
      # only build a new framework package if there was a change within the framework csproj / nuspec (TODO (PS): adjust depending on decission)
      - 'src/framework/Framework.Web/Framework.Web.csproj'
      # workflow file
      - '.github/workflows/framework-packages.yml'

    branches:
      - 'dev'

  # Allow running the workflow manually from the GitHub UI
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
    create_nuget:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            dotnet-version: ['7.0']
    
        steps:
        - uses: actions/checkout@v3
    
        # Install the .NET SDK
        - name: Set up .NET Core SDK  ${{ matrix.dotnet-version }}
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ matrix.dotnet-version }}
    
        # Create the NuGet package in the folder from the environment variable NuGetDirectory
        - run: dotnet pack src/framework/Framework.Web/Framework.Web.csproj -c Release -o ${{ env.NuGetDirectory }}
    
        # Publish the NuGet package as an artifact, so they can be used in the following jobs
        - uses: actions/upload-artifact@v3
          with:
            name: nuget
            if-no-files-found: error
            retention-days: 7
            path: ${{ env.NuGetDirectory }}/*.nupkg
    
    deploy:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            dotnet-version: ['7.0']

        needs: [ create_nuget ]
        steps:  
        #Push NuGet package to GitHub packages
        - name: Download nuget package artifact
          uses: actions/download-artifact@v1.0.0
          with:
              name: nuget
              path: ${{ env.NuGetDirectory }}
        - name: Push package to GitHub packages
          run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg --api-key  ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    