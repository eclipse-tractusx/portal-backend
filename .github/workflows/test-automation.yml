###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

name: TestAutomation E2E-Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
      test_category:
        description: 'Test Category'
        required: true
        default: all
        type: choice
        options:
          - all
          - interface health check
          - portal health check
          - registration
          - portal

jobs:
  build:

    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    strategy:
      matrix:
        dotnet-version: [ '7.0' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JQ
        run:
          sudo apt-get install jq

      - name: Update JSON file
        env:
          project: ${{ secrets.REPORTPORTAL_PROJECT }}
          uuid: ${{ secrets.REPORTPORTAL_AUTHENTICATION_UUID }}
          url: ${{ vars.REPORTPORTAL_URL }}
        run:
          echo "project"
          echo "uuid"
          jq --arg project "$project" \
          --arg uuid "$uuid" \
          --arg url "$url" \
          '.server |= ( .project = $project | .authentication.uuid = $uuid | .url = $url )' \
          ReportPortal.config.json > temp.json && mv temp.json ReportPortal.config.json
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore src
      - name: Build
        run: dotnet build src --configuration Release --no-restore
      - name: Tests - Interface Health Check
        if: contains(fromJSON('["all", "interface health check"]'), github.event.inputs.test_category)
        continue-on-error: true  # required for now as health checks still fail at the moment
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          BASE_PORTAL_URL: ${{ vars.BASE_PORTAL_URL }}
          BASE_CENTRAL_IDP_URL: ${{ vars.BASE_CENTRAL_IDP_URL }}
          CLEARING_HOUSE_URL: ${{ vars.CLEARING_HOUSE_URL }}
          CLEARING_HOUSE_TOKEN_URL: ${{ vars.CLEARING_HOUSE_TOKEN_URL }}
          SD_FACTORY_BASE_URL: ${{ vars.SD_FACTORY_BASE_URL }}
          WALLET_BASE_URL: ${{ vars.WALLET_BASE_URL }}
          BPDM_URL: ${{ vars.BPDM_URL }}
          INTERFACE_HEALTH_CHECK_TECH_CLIENT_ID: ${{ secrets.INTERFACE_HEALTH_CHECK_TECH_CLIENT_ID }}
          INTERFACE_HEALTH_CHECK_TECH_CLIENT_SECRET: ${{ secrets.INTERFACE_HEALTH_CHECK_TECH_CLIENT_SECRET }}
          CLEARING_HOUSE_CLIENT_ID: ${{ secrets.CLEARING_HOUSE_CLIENT_ID }}
          CLEARING_HOUSE_CLIENT_SECRET: ${{ secrets.CLEARING_HOUSE_CLIENT_SECRET }}
        run: dotnet test tests/endtoend --filter Category=InterfaceHC --no-restore --verbosity minimal --logger "html;logfilename=e2eInterfaceHealthCheckResults.html"
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: tests/endtoend/TestResults/e2eInterfaceHealthCheckResults.html
      - name: Tests - Portal Health Check
        if: contains(fromJSON('["all", "portal health check"]'), github.event.inputs.test_category)
        continue-on-error: true  # required for now
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          PORTAL_USER_COMPANY_NAME: ${{ vars.PORTAL_USER_COMPANY_NAME }}
          BASE_PORTAL_URL: ${{ vars.BASE_PORTAL_URL }}
          BASE_CENTRAL_IDP_URL: ${{ vars.BASE_CENTRAL_IDP_URL }}
          BASE_PORTAL_BACKEND_URL: ${{ vars.BASE_PORTAL_BACKEND_URL }}
          PORTAL_USER_NAME: ${{ secrets.PORTAL_USER_NAME }}
          PORTAL_USER_PASSWORD: ${{ secrets.PORTAL_USER_PASSWORD }}
        run: dotnet test tests/endtoend --filter Category=PortalHC --no-restore --verbosity minimal --logger "html;logfilename=e2ePortalHealthCheckResults.html"
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: tests/endtoend/TestResults/e2ePortalHealthCheckResults.html
      - name: Tests - Registration Tests
        if: contains(fromJSON('["all", "registration"]'), github.event.inputs.test_category)
        continue-on-error: true  # required as registration can fail
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          PORTAL_USER_COMPANY_NAME: ${{ vars.PORTAL_USER_COMPANY_NAME }}
          BASE_PORTAL_URL: ${{ vars.BASE_PORTAL_URL }}
          BASE_CENTRAL_IDP_URL: ${{ vars.BASE_CENTRAL_IDP_URL }}
          BASE_PORTAL_BACKEND_URL: ${{ vars.BASE_PORTAL_BACKEND_URL }}
          TEMPMAIL_APIKEY: ${{ secrets.TEMPMAIL_APIKEY }}
          PORTAL_USER_NAME: ${{ secrets.PORTAL_USER_NAME }}
          PORTAL_USER_PASSWORD: ${{ secrets.PORTAL_USER_PASSWORD }}
        run: dotnet test tests/endtoend --filter Category=Registration --no-restore --verbosity minimal --logger "html;logfilename=e2eRegistrationTestResults.html"
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: tests/endtoend/TestResults/e2eRegistrationTestResults.html
      - name: Tests - Portal Tests
        if: contains(fromJSON('["all", "portal"]'), github.event.inputs.test_category)
        continue-on-error: true  # required for now
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}
          NOTIFICATION_OFFER_ID: ${{ vars.NOTIFICATION_OFFER_ID }}
          PORTAL_USER_COMPANY_NAME: ${{ vars.PORTAL_USER_COMPANY_NAME }}
          BASE_PORTAL_URL: ${{ vars.BASE_PORTAL_URL }}
          BASE_CENTRAL_IDP_URL: ${{ vars.BASE_CENTRAL_IDP_URL }}
          BASE_PORTAL_BACKEND_URL: ${{ vars.BASE_PORTAL_BACKEND_URL }}
          TEMPMAIL_APIKEY: ${{ secrets.TEMPMAIL_APIKEY }}
          PORTAL_USER_NAME: ${{ secrets.PORTAL_USER_NAME }}
          PORTAL_USER_PASSWORD: ${{ secrets.PORTAL_USER_PASSWORD }}
        run: dotnet test tests/endtoend --filter Category=Portal --no-restore --verbosity minimal --logger "html;logfilename=e2ePortalTestResults.html"
      - name: 'Upload Artifact'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-report
          path: tests/endtoend/TestResults/e2ePortalTestResults.html
