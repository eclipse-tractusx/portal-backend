###############################################################
# Copyright (c) 2021,2022 BMW Group AG
## Copyright (c) 2021,2022 Contributors to the CatenaX (ng) GitHub Organisation.
##
## See the NOTICE file(s) distributed with this work for additional
## information regarding copyright ownership.
##
## This program and the accompanying materials are made available under the
## terms of the Apache License, Version 2.0 which is available at
## https://www.apache.org/licenses/LICENSE-2.0.
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
## WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
## License for the specific language governing permissions and limitations
## under the License.
##
## SPDX-License-Identifier: Apache-2.0
###############################################################

name: "Veracode"

on:
  #  push:
  #    branches: [ feature/CPLP-1134-db-notification ]
  # pull_request:
  # The branches below must be a subset of the branches above
  # branches: [ main ]
  # paths-ignore:
  #   - "**/*.md"
  #   - "**/*.txt"
  # Trigger manually
  workflow_dispatch:
  # Triggered once a week
  schedule:
   - cron: "0 0 * * 0"


env:
  DOTNET_VERSION: '6.0' # The .NET SDK version to use

jobs:
  analyze-administration-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/administration/CatenaX.NetworkServices.Administration.Service

      - name: Build and publish
        run: |
          cd src/administration/CatenaX.NetworkServices.Administration.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-administration-service.zip
          src/administration/CatenaX.NetworkServices.Administration.Service/.publish
          -x
          src/administration/CatenaX.NetworkServices.Administration.Service/.publish/CatenaX.NetworkServices.Administration.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Administration-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-administration-service.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Administration.Service.dll, CatenaX.NetworkServices.Framework.DBAccess.dll'

  analyze-registration-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/registration/CatenaX.NetworkServices.Registration.Service

      - name: Build and publish
        run: |
          cd src/registration/CatenaX.NetworkServices.Registration.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-registration-service.zip
          src/registration/CatenaX.NetworkServices.Registration.Service/.publish
          -x
          src/registration/CatenaX.NetworkServices.Registration.Service/.publish/CatenaX.NetworkServices.Registration.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Registration-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-registration-service.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Registration.Service.dll, CatenaX.NetworkServices.Framework.Models.dll'

  analyze-provisioning-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/provisioning/CatenaX.NetworkServices.Provisioning.Service

      - name: Build and publish
        run: |
          cd src/provisioning/CatenaX.NetworkServices.Provisioning.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-provisioning-service.zip
          src/provisioning/CatenaX.NetworkServices.Provisioning.Service/.publish
          -x
          src/provisioning/CatenaX.NetworkServices.Provisioning.Service/.publish/CatenaX.NetworkServices.Provisioning.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Provisioning-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-provisioning-service.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Provisioning.Service.dll'

  analyze-marketplace-app-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/marketplace/CatenaX.NetworkServices.App.Service

      - name: Build and publish
        run: |
          cd src/marketplace/CatenaX.NetworkServices.App.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-marketplace-app.zip
          src/marketplace/CatenaX.NetworkServices.App.Service/.publish
          -x
          src/marketplace/CatenaX.NetworkServices.App.Service/.publish/CatenaX.NetworkServices.App.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Marketplace-App-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-marketplace-app.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.App.Service.dll, CatenaX.NetworkServices.Framework.DBAccess.dll, CatenaX.NetworkServices.Framework.Models.dll'

  analyze-portal-migrations:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/portalbackend/CatenaX.NetworkServices.PortalBackend.Migrations

      - name: Build and publish
        run: |
          cd src/portalbackend/CatenaX.NetworkServices.PortalBackend.Migrations
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-portal-migrations.zip
          src/portalbackend/CatenaX.NetworkServices.PortalBackend.Migrations/.publish

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Portal-Migrations-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-portal-migrations.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.PortalBackend.Migrations.dll'

  analyze-maintenance-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/maintenance/CatenaX.NetworkServices.Maintenance.App

      - name: Build and publish
        run: |
          cd src/maintenance/CatenaX.NetworkServices.Maintenance.App
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-maintenance-service.zip
          src/maintenance/CatenaX.NetworkServices.Maintenance.App/.publish

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Maintenance-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-maintenance-service.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Maintenance.App.dll'

  analyze-notification-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/notification/CatenaX.NetworkServices.Notification.Service

      - name: Build and publish
        run: |
          cd src/notification/CatenaX.NetworkServices.Notification.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-notification.zip
          src/notification/CatenaX.NetworkServices.Notification.Service/.publish
          -x
          src/notification/CatenaX.NetworkServices.Notification.Service/.publish/CatenaX.NetworkServices.Notification.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Notification-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-notification.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Notification.Service.dll, CatenaX.NetworkServices.Framework.DBAccess.dll, CatenaX.NetworkServices.Framework.Models.dll'

  analyze-services-service:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/services/CatenaX.NetworkServices.Services.Service

      - name: Build and publish
        run: |
          cd src/services/CatenaX.NetworkServices.Services.Service
          dotnet build --no-restore
          dotnet publish -c Debug  -p:PublishDir=.\publish

      - name: "Bundle files to scan"
        run: >
          zip -r portal-backend-services.zip
          src/services/CatenaX.NetworkServices.Services.Service/.publish
          -x
          src/services/CatenaX.NetworkServices.Services.Service/.publish/CatenaX.NetworkServices.Services.Service

      - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.1
        with:
          # Specify Veracode application name
          appname: "Portal-Backend_Services-Service"
          createprofile: true
          teams: 'portal'
          # Specify path to upload
          filepath: "portal-backend-services.zip"
          vid: "${{ secrets.ORG_VERACODE_API_ID }}"
          vkey: "${{ secrets.ORG_VERACODE_API_KEY }}"
          include: 'CatenaX.NetworkServices.Services.Service.dll, CatenaX.NetworkServices.Framework.DBAccess.dll, CatenaX.NetworkServices.Framework.Models.dll'
