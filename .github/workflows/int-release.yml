###############################################################
# Copyright (c) 2021,2022 BMW Group AG
# Copyright (c) 2021,2022 Contributors to the CatenaX (ng) GitHub Organisation.
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: INT Release

on:
  push:
    tags:
      - 'int-v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_ADMINISTRATION: ${{ github.repository }}_administration-service
  IMAGE_NAME_REGISTRATION: ${{ github.repository }}_registration-service
  IMAGE_NAME_PROVISIONING: ${{ github.repository }}_provisioning-service
  IMAGE_NAME_MARKETPLACE_APP: ${{ github.repository }}_marketplace-app-service
  IMAGE_NAME_PORTAL_MIGRATIONS: ${{ github.repository }}_portal-migrations
  IMAGE_NAME_MAINTENANCE: ${{ github.repository }}_maintenance-service
  IMAGE_NAME_NOTIFICATION: ${{ github.repository }}_notification-service
  IMAGE_NAME_SERVICES: ${{ github.repository }}_services-service

jobs:
  administration-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_ADMINISTRATION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-administration-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_ADMINISTRATION }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  registration-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_REGISTRATION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-registration-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_REGISTRATION }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  provisioning-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PROVISIONING }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-provisioning-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PROVISIONING }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  marketplace-app-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MARKETPLACE_APP }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-marketplace-app-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MARKETPLACE_APP }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  portal-migrations-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PORTAL_MIGRATIONS }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-portal-migrations
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PORTAL_MIGRATIONS }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  maintenance-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MAINTENANCE }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-maintenance-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MAINTENANCE }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  notification-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NOTIFICATION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-notification-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NOTIFICATION }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  services-service-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVICES }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile-services-service
          pull: true
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVICES }}:${{ steps.git-tag.outputs.git-version }}
          labels: ${{ steps.meta.outputs.labels }}

  auth-and-dispatch:
    needs: [ administration-service-release, registration-service-release, provisioning-service-release, marketplace-app-service-release, portal-migrations-release, maintenance-service-release, notification-service-release, services-service-release ]
    runs-on: ubuntu-latest

    steps:

      - name: Get tag name
        id: git-tag
        run: echo ::set-output name=git-version::${GITHUB_REF/refs\/tags\//}

      - name: Set env
        run: echo "RELEASE_VERSION=${{ steps.git-tag.outputs.git-version }}" >> $GITHUB_ENV

      - name: Get token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.ORG_PORTAL_DISPATCH_APPID }}
          application_private_key: ${{ secrets.ORG_PORTAL_DISPATCH_KEY }}

      - name: Trigger workflow
        id: call_action
        env:
          TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: |
          curl -v \
            --request POST \
            --url https://api.github.com/repos/catenax-ng/product-portal-cd/actions/workflows/portal-backend-int-release-image-update.yml/dispatches \
            --header "authorization: Bearer $TOKEN" \
            --header "Accept: application/vnd.github.v3+json" \
            --data '{"ref":"main", "inputs": { "new-image":"${{ env.RELEASE_VERSION }}" }}' \
            --fail
