<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
      <RootNamespace>Org.Eclipse.TractusX.Portal.Backend.Framework</RootNamespace>
      <AssemblyName>Org.Eclipse.TractusX.Portal.Backend.Framework</AssemblyName>
      <TargetFramework>net7.0</TargetFramework>
      <ImplicitUsings>enable</ImplicitUsings>
      <Nullable>enable</Nullable>
      <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

      <!-- nuget specific config-->
      <PackageId>Org.Eclipse.TractusX.Portal.Backend.Framework</PackageId>
      <PackageVersion>1.0.0-RC1</PackageVersion>
      <Authors>TractusX</Authors>
      <Copyright>
        All content is the property of the respective authors or their employers. For
        more information regarding authorship of content, please consult the listed
        source code repository logs.
      </Copyright>
      <Description>
        The Catena-X Portal Backend Framework library is a versatile .NET library that provides a set of powerful tools and utilities for common development tasks.
        This package simplifies various aspects of your application, including database interactions, asynchronous programming, file I/O, LINQ operations, logging, and database seeding.
      </Description>
      <PackageReadmeFile>README.md</PackageReadmeFile>
      <PackageLicenseFile>LICENSE</PackageLicenseFile>
      <RepositoryUrl>https://github.com/eclipse-tractusx/portal-backend</RepositoryUrl>
      <RepositoryType>git</RepositoryType>
    </PropertyGroup>

    <ItemGroup>
      <None Include="./README.md" Pack="true" PackagePath="" />
      <None Include="../../../LICENSE" Pack="true" PackagePath="" />
    </ItemGroup>
    
    <ItemGroup>
      <ProjectReference Include="..\Framework.Async\Framework.Async.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.DateTimeProvider\Framework.DateTimeProvider.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.DBAccess\Framework.DBAccess.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.DependencyInjection\Framework.DependencyInjection.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.ErrorHandling.Library\Framework.ErrorHandling.Library.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.HttpClientExtensions\Framework.HttpClientExtensions.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.IO\Framework.IO.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.Linq\Framework.Linq.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.Logging\Framework.Logging.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.Models\Framework.Models.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.Seeding\Framework.Seeding.csproj" PrivateAssets="All" />
      <ProjectReference Include="..\Framework.Token\Framework.Token.csproj" PrivateAssets="All" />
    </ItemGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput> $(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
      <ItemGroup>
        <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))"/>
      </ItemGroup>
  
      <ItemGroup>
        <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)"/>
      </ItemGroup>
    </Target>
</Project>
