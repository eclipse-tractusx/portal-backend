{
  "Keycloak": {
    "central": {
      "ConnectionString": "",
      "ClientId": "",
      "ClientSecret": "",
      "AuthRealm": ""
    },
    "shared": {
      "ConnectionString": "",
      "ClientId": "",
      "ClientSecret": "",
      "AuthRealm": ""
    }
  },
  "JwtBearerOptions": {
    "RequireHttpsMetadata": true,
    "MetadataAddress": "",
    "SaveToken": true,
    "TokenValidationParameters": {
      "ValidateIssuer": true,
      "ValidIssuer": "",
      "ValidateIssuerSigningKey": true,
      "ValidAudience": "",
      "ValidateAudience": true,
      "ValidateLifetime": true,
      "ClockSkew": 600000
    }
  },
  "Provisioning": {
    "CentralRealm": "",
    "CentralRealmId": "",
    "IdpPrefix": "idp",
    "MappedBpnAttribute": "bpn",
    "MappedCompanyAttribute": "organisation",
    "UserNameMapperTemplate": "${ALIAS}.${CLAIM.sub}",
    "CentralIdentityProvider": {
      "providerId": "keycloak-oidc",
      "enabled": false,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": "",
      "storeToken": "",
      "addReadTokenRoleOnCreate": "",
      "authenticateByDefault": false,
      "linkOnly": "",
      "postBrokerLoginFlowAlias": "",
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "clientId": "",
        "acceptsPromptNoneForwardFromClient": "",
        "authorizationUrl": "https://null",
        "backchannelSupported": "",
        "clientAssertionSigningAlg": "RS256",
        "clientAuthMethod": "private_key_jwt",
        "disableUserInfo": "",
        "hideOnLoginPage": "true",
        "loginHint": "",
        "pkceEnabled": "",
        "syncMode": "FORCE",
        "tokenUrl": "https://null",
        "uiLocales": "",
        "useJwksUrl": "true",
        "validateSignature": "true",
        "jwksUrl": "https://null"
      }
    },
    "ClientProtocolMapper": {
      "protocol": "openid-connect",
      "name": "BPN",
      "_ProtocolMapper": "oidc-usermodel-attribute-mapper",
      "config": {
        "userAttribute": "bpn",
        "claimName": "bpn",
        "jsonTypelabel": "String",
        "idTokenClaim": "true",
        "accessTokenClaim": "true",
        "userInfoTokenClaim": "true",
        "attributeName": "true",
        "multivalued": ""
      }
    },
    "OidcIdentityProvider": {
      "providerId": "oidc",
      "enabled": false,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": "",
      "storeToken": "",
      "addReadTokenRoleOnCreate": "",
      "authenticateByDefault": false,
      "linkOnly": "",
      "postBrokerLoginFlowAlias": "",
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "clientId": "",
        "acceptsPromptNoneForwardFromClient": "",
        "authorizationUrl": "https://null",
        "backchannelSupported": "",
        "clientAssertionSigningAlg": "RS256",
        "clientAuthMethod": "client_secret_basic",
        "disableUserInfo": "",
        "hideOnLoginPage": "true",
        "loginHint": "",
        "pkceEnabled": "",
        "syncMode": "FORCE",
        "tokenUrl": "https://null",
        "uiLocales": "",
        "useJwksUrl": "false",
        "validateSignature": "true",
        "jwksUrl": ""
      }
    },
    "SamlIdentityProvider": {
      "providerId": "saml",
      "enabled": false,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": "",
      "storeToken": "",
      "addReadTokenRoleOnCreate": "",
      "authenticateByDefault": false,
      "linkOnly": "",
      "postBrokerLoginFlowAlias": "",
      "firstBrokerLoginFlowAlias": "first broker login",
      "config":{
        "useJwksUrl":"false",
        "syncMode":"FORCE",
        "nameIDPolicyFormat":"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "principalType":"SUBJECT",
        "signatureAlgorithm":"RSA_SHA256",
        "xmlSigKeyInfoKeyNameTransformer":"KEY_ID",
        "allowCreate":"true",
        "entityId":"https://devhost:8443/iamcentral/auth/realms/CX-Central",
        "authnContextComparisonType":"exact",
        "hideOnLoginPage":"",
        "backchannelSupported":"",
        "postBindingResponse":"",
        "postBindingAuthnRequest":"",
        "postBindingLogout":"",
        "wantAuthnRequestsSigned":"",
        "wantAssertionsSigned":"",
        "wantAssertionsEncrypted":"",
        "forceAuthn":"",
        "validateSignature":"",
        "signSpMetadata":"",
        "loginHint":"",
        "singleSignOnServiceUrl":"https://null",
        "allowedClockSkew":"",
        "attributeConsumingServiceIndex":""
      }
    },
    "SharedRealmClient": {
      "clientId": "",
      "enabled": true,
      "clientAuthenticatorType": "client-jwt",
      "redirectUris": [
        "https://null"
      ],
      "webOrigins": [
        "+"
      ],
      "publicClient": false,
      "protocol": "openid-connect",
      "attributes": {
        "jwks.url": "https://null",
        "use.jwks.url": "true",
        "token.endpoint.auth.signing.alg": "RS256"
      }
    },
    "SharedRealm": {
      "enabled": true,
      "resetPasswordAllowed": true,
      "bruteForceProtected": true,
      "failureFactor": 10,
      "passwordPolicy": "length(15) and forceExpiredPasswordChange(90) and lowerCase(1) and digits(1) and notUsername(undefined) and notEmail(undefined)",
      "smtpServer": {
        "port": "",
        "host": "",
        "ssl": "",
        "starttls": "",
        "auth": "",
        "from": "",
        "replyTo": "",
        "user": "",
        "password": ""
      }
    },
    "SharedUser": {
      "enabled": true,
      "emailVerified": true,
      "requiredActions": [
        "UPDATE_PASSWORD"
      ]
    },
    "CentralUser": {
      "enabled": true,
      "emailVerified": true
    },
    "ServiceAccountClientPrefix": "sa",
    "ServiceAccountClient": {
      "clientId": "",
      "enabled": true,
      "redirectUris": [
        "https://null"
      ],
      "webOrigins": [
        "+"
      ],
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "publicClient": false,
      "protocol": "openid-connect"
    }
  },
  "ServiceAccount": {
    "ClientId": "test"
  },
  "Connectors": {
    "MaxPageSize": 20,
    "ValidCertificationContentTypes": [
      "application/x-pem-file",
      "application/x-x509-ca-cert",
      "application/pkix-cert"
    ]
  },
  "Registration": {
    "ApplicationsMaxPageSize": 20,
    "DocumentTypeIds": [
      "COMMERCIAL_REGISTER_EXTRACT"
    ]
  },
  "Daps":{
    "DapsUrl": "https://api.test.com"
  },
  "Invitation": {
    "RegistrationAppAddress": "https://test-registration.azurewebsites.net",
    "InvitedUserInitialRoles": [
      {
        "ClientId": "test",
        "UserRoleNames": ["Company Admin"]
      }
    ],
    "InitialLoginTheme": "test"
  },
  "UserManagement": {
    "ApplicationsMaxPageSize": 20,
    "CompanyUserStatusIds": ["ACTIVE","INACTIVE"],
    "PasswordReset": {
      "NoOfHours": 24,
      "MaxNoOfReset": 10
    },
    "Portal": {
      "KeycloakClientID": "test",
      "BasePortalAddress": "https://test-portal.azurewebsites.net"
    },
    "UserAdminRoles": [
      {
        "ClientId": "Cl2-CX-Portal",
        "UserRoleNames": [
          "Company Admin",
          "IT Admin"
        ]
      }
    ]
  },
  "ApplicationChecklist": {
    "Custodian": {
      "MembershipErrorMessage": "Credential of type MembershipCredential is already exists",
      "Username": "test",
      "Password": "test",
      "ClientId": "test",
      "GrantType": "test",
      "ClientSecret": "test",
      "Scope": "test",
      "KeycloakTokenAddress": "test",
      "BaseAddress": "test"
    },
    "Bpdm": {
      "Username": "test",
      "Password": "test",
      "ClientId": "test",
      "GrantType": "test",
      "ClientSecret": "test",
      "Scope": "test",
      "KeycloakTokenAddress": "test",
      "BaseAddress": "test"
    },
    "Clearinghouse": {
      "Username": "test",
      "Password": "test",
      "ClientId": "test",
      "GrantType": "test",
      "ClientSecret": "test",
      "Scope": "test",
      "KeycloakTokenAddress": "test",
      "BaseAddress": "test"
    },
    "SdFactory":{
      "Username": "test",
      "Password": "test",
      "ClientId": "test",
      "GrantType": "test",
      "ClientSecret": "test",
      "Scope": "test",
      "KeycloakTokenAddress": "test",
      "SdFactoryUrl": "test",
      "SdFactoryIssuerBpn": "test"
    }
  },
  "MailingService": {
    "Templates": [
      {
        "Name": "RegistrationTemplate",
        "Setting": {
          "Subject": "Invitation to register for Catena-X",
          "EmailTemplateType": "CxAdminInvitation"
        }
      },
      {
        "Name": "PasswordForRegistrationTemplate",
        "Setting": {
          "Subject": "Password required to register for Catena-X",
          "EmailTemplateType": "Password"
        }
      },
      {
        "Name": "NewUserTemplate",
        "Setting": {
          "Subject": "Welcome as new user to the Catena-X Network",
          "EmailTemplateType": "PortalNewUserWelcome"
        }
      },
      {
        "Name": "NewUserPasswordTemplate",
        "Setting": {
          "Subject": "Password for Catena-X",
          "EmailTemplateType": "Password"
        }
      },
      {
        "Name": "EmailRegistrationDeclineTemplate",
        "Setting": {
          "Subject": "Registration Decline for Catena-X",
          "EmailTemplateType": "PortalRegistrationDecline"
        }
      },
      {
        "Name": "NewUserOwnIdpTemplate",
        "Setting": {
          "Subject": "Welcome to Catena-X - Your user account has been created.",
          "EmailTemplateType": "NewUserAccountOwnIdp"
        }
      }
    ],
    "Mail": {
      "SmtpHost": "test",
      "SmtpPort": 587,
      "SmtpUser": "test",
      "SmtpPassword": "test"
    }
  },
  "IdentityProviderAdmin": {
    "CSVSettings" : {
      "FileName": "test",
      "ContentType": "test",
      "Charset": "UTF-8",
      "Separator": "test",
      "HeaderUserId": "test",
      "HeaderFirstName": "test",
      "HeaderLastName": "test",
      "HeaderEmail": "test",
      "HeaderProviderAlias": "test",
      "HeaderProviderUserId": "test",
      "HeaderProviderUserName": "test"
    }
  },
  "Document": {
    "FrameDocumentTypeIds": [
      "CX_FRAME_CONTRACT"
    ]
  },
  "Seeding": {
    "TestDataEnvironments": [
      "test"
    ]
  }
}
